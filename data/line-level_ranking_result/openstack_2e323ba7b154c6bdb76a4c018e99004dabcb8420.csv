total_tokens,line_level_label,line_score,row
use this file compliance the License You may obtain ,1.0,1.0,1
Unless required by applicable law agreed to writing software ,1.0,0.9203714950288817,2
<NUM> If you specify both a password a key file this driver will use the ,0.0,0.8756307668108945,3
License the specific language governing permissions limitations ,1.0,0.7502413021812521,4
Extends the volume the volume size more than the snapshot size ,0.0,0.671054161442523,5
a copy of the License at ,1.0,0.6656962481028269,6
Licensed under the Apache License Version <NUM> <NUM> the <STR> you may ,1.0,0.6539091887595178,7
cinder openstack common log logging ,1.0,0.6179288035205176,8
distributed under the License distributed on an <STR> BASIS WITHOUT ,1.0,0.6075282725892023,9
http / / www apache org / licenses / LICENSE - <NUM> <NUM> ,1.0,0.581119382793565,10
<STR> Creates a clone of the specified volume ,0.0,0.5709829247167157,11
WARRANTIES OR CONDITIONS OF ANY KIND either express implied See the ,1.0,0.554893577798802,12
Extends the volume the new volume size more than ,0.0,0.45765790442761817,13
Filename of private key to use SSH authentication ,1.0,0.4392763809780212,14
self context = context get_admin_context ,0.0,0.43043230151220796,15
IBMNAS_NFSDriver self __ init__ * args * * kwargs ,1.0,0.4050812258053102,16
<NUM> When using a key file authentication it up to the user ,0.0,0.36934161435040086,17
system administrator to store the private key a safe manner ,0.0,0.3582344338004006,18
def__ init__ self execute = utils execute * args * * kwargs ,0.0,0.34347197739256724,19
Creates file on NFS share using it block device on hypervisor ,0.0,0.3195581358550235,20
IP address Hostname of NAS system string value ,1.0,0.27738585286979395,21
<STR> Creates a volume an existing volume snapshot ,0.0,0.25024513370652834,22
self _context = context ,0.0,0.2501550135231523,23
cinder openstack common processutils ,1.0,0.24511809277187072,24
under the License ,1.0,0.23752824692966013,25
SSH port to use to connect to NAS system integer value ,1.0,0.23589469936707877,26
cinder context ,1.0,0.2335420980942889,27
default = <STR> ,1.0,0.23303235427472696,28
default = <NUM> ,0.0,0.23303235427472696,29
Currently it supports the following IBM Storage Systems ,0.0,0.22676090737212765,30
User name to connect to NAS system string value ,1.0,0.20212216362283544,31
self context user_id = <STR> ,0.0,0.199045282740564,32
do_setup self context ,0.0,0.199045282740564,33
IBMNAS_NFSDriver self do_setup context ,0.0,0.199045282740564,34
self context project_id = <STR> ,0.0,0.199045282740564,35
volume = self db volume_get self _context volume_id ,0.0,0.1973071828461755,36
exception VolumeBackendAPIException data = msg ,1.0,0.1939476076625008,37
the source volume size ,0.0,0.17075094781240016,38
Tests the IBM NAS family SONAS Storwize V<NUM> Unified ,1.0,0.17075094781240016,39
snapshot_path = os path join export_path snapshot name ,0.0,0.17024498350790032,40
cinder volume drivers ibm ibmnas ,1.0,0.16770029490807736,41
LOG = logging getLogger __ name__ ,1.0,0.1547590040579647,42
key file only ,0.0,0.15074298347232093,43
self _driver configuration set_override flag value group ,0.0,0.14637634553237003,44
msg = _ <STR> % e stderr ,0.0,0.1413176491965502,45
drv delete_snapshot snapshot ,1.0,0.1402993944623742,46
delete_snapshot self snapshot ,1.0,0.1402993944623742,47
exception InvalidInput reason =_ <STR> % flag ,0.0,0.133837766554134,48
cinder volume drivers san san ,1.0,0.1333327039920673,49
snapshot name = <STR> ,1.0,0.12713279181590034,50
cinder exception ,1.0,0.126587586806618,51
create_volume_from_snapshot self volume snapshot ,1.0,0.1177270439184333,52
drv create_volume_from_snapshot snapshot ,1.0,0.1177270439184333,53
Password to connect to NAS system string value ,1.0,0.11763468100943983,54
<STR> IBM NAS NFS based cinder driver ,1.0,0.11696300641065492,55
r <STR> re M | re S ,0.0,0.11594969931435486,56
cinder volume configuration conf ,1.0,0.11213040711427995,57
self configuration san_private_key = \ ,1.0,0.1094712989072553,58
out _err = self _run_ssh ssh_cmd check_exit_code = ,0.0,0.10237683250174337,59
self _set_flag flag None ,1.0,0.102243725724802,60
LOG error msg ,0.0,0.10185683620969863,61
msg = _ <STR> ,1.0,0.10185683620969863,62
fchild_local_path = os path join mount_point os path basename fchild ,0.0,0.09944069501999415,63
drv delete_snapshot return_value = None ,1.0,0.09765408525986947,64
drv delete_snapshot = mock drv _get_provider_location return_value \ ,0.0,0.09765408525986947,65
return_value drv delete_snapshot ,0.0,0.09765408525986947,66
result = drv delete_volume volume ,1.0,0.09621087970382516,67
delete_volume self volume ,1.0,0.09621087970382516,68
drv delete_volume volume ,1.0,0.09621087970382516,69
drv _delete_snapfiles return_value drv delete_volume ,0.0,0.09621087970382516,70
drv delete_volume = mock drv _get_export_path return_value \ ,0.0,0.09621087970382516,71
drv delete_volume return_value = ,1.0,0.09621087970382516,72
def__ setitem__ self key value ,0.0,0.09505274965664885,73
self assertRaises exception InvalidInput ,1.0,0.09209077145280217,74
exception InvalidInput ,1.0,0.09209077145280217,75
self assertRaises exception CinderException ,1.0,0.09209077145280217,76
volume_path = os path join export_path volume_name ,0.0,0.08918519255120995,77
def_update_volume_stats self ,1.0,0.08842575343455593,78
fparent_remote_path = os path join os path dirname fchild ,0.0,0.08622438338392313,79
Nilesh Bhosale < nilesh bhosale @ ibm com > ,0.0,0.08619017005317829,80
Sasikanth Eda < sasikanth eda @ ibm com > ,0.0,0.08619017005317829,81
volume_path = os path join export_path snapshot [ <STR> ] ,0.0,0.08575750089447819,82
snapshot_path = os path join export_path snapshot [ <STR> ] ,0.0,0.08575750089447819,83
snapshot_path = os path join mount_path snapshot [ <STR> ] ,0.0,0.08575750089447819,84
<NUM> <NUM> <NUM> - Initial driver ,0.0,0.08246619105689887,85
cinder volume drivers nfs ,1.0,0.0815101248549163,86
conf Configuration None ,0.0,0.07763359176053056,87
self fields [ key ] = value ,0.0,0.07755217120806042,88
oslo config cfg ,1.0,0.07575759876428831,89
drv create_volume_from_snapshot = mock drv _get_export_path \ ,1.0,0.07508173471593153,90
drv create_volume_from_snapshot return_value = self TEST_NFS_EXPORT ,0.0,0.07508173471593153,91
drv create_volume_from_snapshot ,1.0,0.07508173471593153,92
LOG info _ <STR> ] ,1.0,0.06787998984903855,93
LOG info _ <STR> new_size ,0.0,0.06787998984903855,94
backend_name = self configuration safe_get <STR> ,1.0,0.06695916672078772,95
test_create_cloned_volume self ,1.0,0.06654827581494693,96
nfs_share = self _get_provider_location snapshot [ <STR> ] ,1.0,0.06566916802851194,97
capacity free _used = self _get_capacity_info share ,1.0,0.06201855413268604,98
self _set_flag k v ,0.0,0.060496730623515724,99
self _set_flag <STR> None ,1.0,0.060496730623515724,100
flag required_flags ,1.0,0.058810781550070204,101
def__ getitem__ self item ,0.0,0.058612184112133224,102
reInode = re ,0.0,0.05797484965720111,103
re ,1.0,0.05797484965720111,104
os path basename tmp_file_path ,0.0,0.05632850332805059,105
fpbase = os path basename fparent ,0.0,0.05632850332805059,106
k v self _def_flags iteritems ,0.0,0.05502506396449596,107
LOG debug _ <STR> % volume_id ,1.0,0.05477838921018497,108
LOG debug <STR> ,1.0,0.05477838921018497,109
LOG debug _ <STR> ,1.0,0.05477838921018497,110
LOG debug _ <STR> ,1.0,0.05477838921018497,111
LOG debug _ <STR> ,1.0,0.05477838921018497,112
self _context = None ,0.0,0.05110973078264437,113
self configuration san_ip = self configuration nas_ip ,0.0,0.05102212572295763,114
check_for_setup_error self ,1.0,0.04786621527494135,115
drv check_for_setup_error ,1.0,0.04786621527494135,116
self _driver check_for_setup_error ,1.0,0.04786621527494135,117
<STR> snap ,0.0,0.04608573715407084,118
def_create_ibmnas_copy self src dest snap ,1.0,0.04608573715407084,119
volume_name = volume [ <STR> ] ,1.0,0.0460730008592484,120
out ,0.0,0.0437039215499259,121
out _err = self _execute <STR> ,1.0,0.0437039215499259,122
fparent = out split <STR> <NUM> [ <NUM> ] ,0.0,0.0437039215499259,123
match = reInode match out ,0.0,0.0437039215499259,124
snap_file_path = os path join export_path snap_file_name ,0.0,0.04311219169196156,125
def_resize_volume_file self path new_size ,1.0,0.04311219169196156,126
volume_path = os path join export_path volume [ <STR> ] ,0.0,0.04311219169196156,127
mount_point = os path dirname self local_path volume ,1.0,0.04311219169196156,128
image_utils resize_image path new_size ,1.0,0.04311219169196156,129
tmp_file_local_path = os path join mount_path ,1.0,0.04311219169196156,130
os path exists fchild fparent ,0.0,0.04311219169196156,131
path = self local_path volume ,1.0,0.04311219169196156,132
dest_vol_path = os path join export_path volume [ <STR> ] ,0.0,0.04311219169196156,133
path = mount_point ,0.0,0.04311219169196156,134
self _resize_volume_file path new_size ,1.0,0.04311219169196156,135
src_vol_path = os path join export_path src_vref [ <STR> ] ,0.0,0.04311219169196156,136
drv _get_provider_location snapshot [ <STR> ] ,1.0,0.04264530920251663,137
drv create_snapshot snapshot ,1.0,0.04264530920251663,138
create_snapshot self snapshot ,1.0,0.04264530920251663,139
snapshot = FakeEnv ,0.0,0.04264530920251663,140
mock drv _get_export_path snapshot [ <STR> ] ,1.0,0.04264530920251663,141
export_path = self _get_export_path snapshot [ <STR> ] ,1.0,0.04264530920251663,142
snapshot [ <STR> ,1.0,0.04264530920251663,143
snapshot [ <STR> ] = self TEST_SIZE_IN_GB ,0.0,0.04264530920251663,144
snapshot [ <STR> ] ,1.0,0.04264530920251663,145
self configuration safe_get flag ,0.0,0.041746995101332736,146
def_set_flag self flag value ,0.0,0.041746995101332736,147
self fields [ item ] ,0.0,0.04111160566346433,148
fields = ,0.0,0.04111160566346433,149
global_free + = free ,1.0,0.041063964851741123,150
<STR> % e stderr ,0.0,0.03946081298687322,151
<STR> e stderr ,0.0,0.03946081298687322,152
secret = ,0.0,0.0352986682459673,153
check_exit_code = run_as_root = ,0.0,0.03525498826485646,154
check_exit_code = run_as_root = ,0.0,0.03525498826485646,155
<STR> fchild_local_path check_exit_code = ,0.0,0.03525498826485646,156
cinder test ,1.0,0.034496815353805665,157
cinder utils ,1.0,0.034496815353805665,158
cinder units ,1.0,0.034496815353805665,159
cinder image image_utils ,1.0,0.034496815353805665,160
LOG warn _ <STR> ,1.0,0.0344299299783078,161
drv _find_share ,0.0,0.03142555182831894,162
drv _find_share return_value \ ,0.0,0.03142555182831894,163
processutils ProcessExecutionError e ,1.0,0.030975825290213987,164
IBMNAS_NFSDriver nfs NfsDriver san SanDriver ,0.0,0.025911289568599404,165
data [ <STR> ] = self get_version ,1.0,0.02442959741043551,166
ssh_cmd = [ <STR> dest ] ,1.0,0.023417922687020778,167
ssh_cmd = [ <STR> fchild ] ,1.0,0.023417922687020778,168
self _run_ssh ssh_cmd ,1.0,0.023417922687020778,169
ssh_cmd = [ <STR> tmp_file_path ] ,1.0,0.023417922687020778,170
mount_path = self _get_mount_point_for_share nfs_share ,1.0,0.023023858825995308,171
global_capacity + = capacity ,1.0,0.020954589280944905,172
CONF register_opts nas_opts ,1.0,0.01789675818417774,173
required_flags = [ <STR> ] ,1.0,0.01706378644873747,174
required_flags = [ ,1.0,0.01706378644873747,175
test_create_snapshot self ,1.0,0.012356853116892469,176
test_delete_snapshot self ,1.0,0.011929116106852853,177
group = self _driver configuration config_group ,0.0,0.006202225912164272,178
driver_volume_type = <STR> ,1.0,0.0026056772258459503,179
data [ <STR> ] = self driver_volume_type ,1.0,0.0026056772258459503,180
volume_dest size = self TEST_SIZE_IN_GB ,0.0,0.0,181
volume_src [ <STR> ,1.0,0.0,182
self _execute <STR> tmp_file_local_path run_as_root = ,1.0,0.0,183
drv create_cloned_volume ,1.0,0.0,184
self configuration nas_password ,1.0,0.0,185
drv extend_volume ,1.0,0.0,186
self assertEqual None result ,1.0,0.0,187
volume_src size = self TEST_SIZE_IN_GB ,0.0,0.0,188
nas_password = ,1.0,0.0,189
self _delete_snapfiles volume_path mount_point ,0.0,0.0,190
test_get_export_path self ,0.0,0.0,191
share self _mounted_shares ,1.0,0.0,192
<STR> ,1.0,0.0,193
volume = FakeEnv ,1.0,0.0,194
mock drv _get_provider_location return_value = self TEST_NFS_EXPORT ,1.0,0.0,195
test_delete_volume self ,1.0,0.0,196
os ,1.0,0.0,197
drv _get_mount_point_for_share return_value drv _execute \ ,0.0,0.0,198
self TEST_LOCAL_PATH ,0.0,0.0,199
drv _set_rw_permissions_for_all return_value \ ,1.0,0.0,200
drv _create_ibmnas_copy ,1.0,0.0,201
def_create_ibmnas_snap self src dest mount_path ,0.0,0.0,202
self _delete_snapfiles fparent_remote_path mount_point ,0.0,0.0,203
= <STR> ,1.0,0.0,204
mock drv _get_provider_location volume [ <STR> ] ,1.0,0.0,205
export_path = self _get_export_path src_vref [ <STR> ] ,0.0,0.0,206
drv create_cloned_volume return_value = self TEST_NFS_EXPORT ,0.0,0.0,207
drv _resize_volume_file ,1.0,0.0,208
volume_dest [ <STR> ,1.0,0.0,209
<STR> inode run_as_root = ,0.0,0.0,210
TEST_NFS_EXPORT = <STR> ,1.0,0.0,211
drv _delete_snapfiles ,1.0,0.0,212
TEST_DEST_SNAP ,1.0,0.0,213
TEST_DEST_PATH = <STR> ,1.0,0.0,214
volume_dest ,1.0,0.0,215
self _create_ibmnas_snap snapshot_path volume_path None ,1.0,0.0,216
self _ensure_shares_mounted ,1.0,0.0,217
self TEST_EXTEND_SIZE_IN_GB ,1.0,0.0,218
split <STR> [ <NUM> ] ,0.0,0.0,219
drv create_snapshot ,1.0,0.0,220
drv _get_mount_point_for_share self TEST_NFS_EXPORT ,1.0,0.0,221
<STR> ] ,1.0,0.0,222
fparent = None ,0.0,0.0,223
volume_dest [ <STR> ] = self TEST_SIZE_IN_GB ,1.0,0.0,224
drv _create_ibmnas_snap return_value = None ,0.0,0.0,225
test_create_volume_from_snapshot self ,1.0,0.0,226
TEST_VOLUME_PATH = <STR> ,1.0,0.0,227
test_create_ibmnas_snap_no_mount_point_provided self ,1.0,0.0,228
volume_dest = FakeEnv ,1.0,0.0,229
global_capacity = <NUM> ,1.0,0.0,230
snap_file_name = volume [ <STR> ] ,1.0,0.0,231
self TEST_VOLUME_PATH ,1.0,0.0,232
self assertEqual None ,0.0,0.0,233
<STR> <NUM> ,1.0,0.0,234
drv _create_ibmnas_snap self TEST_VOLUME_PATH ,1.0,0.0,235
<STR> dest ,0.0,0.0,236
test_delete_snapfiles self ,1.0,0.0,237
drv _resize_volume_file return_value = ,1.0,0.0,238
mock drv _get_export_path return_value = self TEST_NFS_EXPORT \ ,1.0,0.0,239
data [ <STR> ] = global_capacity / units GiB ,1.0,0.0,240
<STR> <NUM> <NUM> ,1.0,0.0,241
self assertEqual mock image_utils resize_image ,0.0,0.0,242
test_get_provider_location self ,1.0,0.0,243
drv _create_ibmnas_copy ,1.0,0.0,244
drv _resize_volume_file ,1.0,0.0,245
drv extend_volume return_value = None ,0.0,0.0,246
Authors ,0.0,0.0,247
% <STR> mount_point ,1.0,0.0,248
def_reset_flags self ,0.0,0.0,249
% <STR> dest ,0.0,0.0,250
TEST_MNT_POINT = <STR> ,1.0,0.0,251
drv _create_ibmnas_snap ,0.0,0.0,252
data [ <STR> ] = global_free / units GiB ,1.0,0.0,253
def_get_export_path self volume_id ,1.0,0.0,254
FakeEnv ,0.0,0.0,255
nas_login = admin ,1.0,0.0,256
nas_opts = [ ,1.0,0.0,257
self configuration san_password = self configuration nas_password ,0.0,0.0,258
volume_src ,0.0,0.0,259
self _reset_flags ,0.0,0.0,260
self _set_rw_permissions_for_all volume_path ,1.0,0.0,261
Notes ,0.0,0.0,262
volume [ <STR> ] = None ,0.0,0.0,263
volume [ <STR> ] ,1.0,0.0,264
drv _set_rw_permissions_for_all ,1.0,0.0,265
self assertEqual None mock drv _run_ssh ,1.0,0.0,266
drv _resize_volume_file return_value \ ,1.0,0.0,267
volume [ <STR> ] = self TEST_SIZE_IN_GB ,1.0,0.0,268
self assertEqual self TEST_NFS_EXPORT ,1.0,0.0,269
data [ <STR> ,1.0,0.0,270
def_get_provider_location self volume_id ,0.0,0.0,271
set_execute self execute ,0.0,0.0,272
<STR> ,0.0,0.0,273
Version history ,0.0,0.0,274
mock ,1.0,0.0,275
data [ <STR> ] = <NUM> ,1.0,0.0,276
<STR> ,1.0,0.0,277
drv create_snapshot return_value = None ,1.0,0.0,278
<STR> % ,1.0,0.0,279
drv _get_mount_point_for_share return_value \ ,1.0,0.0,280
self _driver configuration local_conf reset ,0.0,0.0,281
TEST_SIZE_IN_GB = <NUM> ,0.0,0.0,282
CONF = cfg CONF ,1.0,0.0,283
drv _resize_volume_file = mock image_utils resize_image return_value \ ,0.0,0.0,284
drv extend_volume = mock drv local_path return_value \ ,0.0,0.0,285
<NUM> IBM Storwize V<NUM> Unified ,1.0,0.0,286
test_create_ibmnas_snap_mount_point_provided self ,1.0,0.0,287
inode = match group <STR> ,0.0,0.0,288
TEST_EXTEND_SIZE_IN_GB = <NUM> ,0.0,0.0,289
drv create_cloned_volume = mock drv _get_export_path \ ,1.0,0.0,290
tearDown self ,0.0,0.0,291
drv create_cloned_volume ,1.0,0.0,292
drv _create_ibmnas_copy = mock drv _run_ssh return_value \ ,0.0,0.0,293
volume [ <STR> ,1.0,0.0,294
test_create_ibmnas_copy self ,1.0,0.0,295
fpbase ,0.0,0.0,296
self assertEqual None mock drv local_path ,1.0,0.0,297
drv _execute return_value drv _create_ibmnas_snap ,0.0,0.0,298
= <STR> ,1.0,0.0,299
<STR> [ <NUM> ] ,0.0,0.0,300
self _execute <STR> snapshot_path snapshot_ts_path ,0.0,0.0,301
drv _create_ibmnas_snap ,1.0,0.0,302
tmp_file_path = dest + <STR> ,1.0,0.0,303
<STR> ] ,1.0,0.0,304
nas_ssh_port = <NUM> ,1.0,0.0,305
TEST_DEST_PATH ,1.0,0.0,306
self _mock = mock Mock ,0.0,0.0,307
TEST_DEST_SNAP = <STR> ,1.0,0.0,308
drv _delete_snapfiles return_value = None ,1.0,0.0,309
drv _create_ibmnas_copy ,1.0,0.0,310
string value ,1.0,0.0,311
self configuration nas_private_key ,1.0,0.0,312
IBMNASDriverTestCase test TestCase ,0.0,0.0,313
mock = self _mock ,0.0,0.0,314
drv _create_ibmnas_copy return_value = None ,0.0,0.0,315
drv _execute ,0.0,0.0,316
reason =_ <STR> ,1.0,0.0,317
self _create_ibmnas_snap src = volume_path dest = snapshot_path ,0.0,0.0,318
mount_path = mount_path ,0.0,0.0,319
VERSION = VERSION ,1.0,0.0,320
drv = self _driver ,1.0,0.0,321
drv _create_ibmnas_snap return_value \ ,0.0,0.0,322
match ,0.0,0.0,323
drv _create_ibmnas_snap return_value = ,1.0,0.0,324
self assertEqual self TEST_NFS_EXPORT split <STR> [ <NUM> ] ,0.0,0.0,325
IBMNASDriverTestCase self setUp ,0.0,0.0,326
data = ,1.0,0.0,327
drv extend_volume ,1.0,0.0,328
self _execute ,1.0,0.0,329
export_path = self _get_export_path volume [ <STR> ] ,0.0,0.0,330
test_delete_volume_no_provider_location self ,0.0,0.0,331
drv _resize_volume_file ,1.0,0.0,332
global_free = <NUM> ,1.0,0.0,333
None ,0.0,0.0,334
self _create_ibmnas_copy src_vol_path dest_vol_path snap_file_path ,0.0,0.0,335
<STR> None ,0.0,0.0,336
nas_private_key = ,1.0,0.0,337
self TEST_MNT_POINT_BASE ,0.0,0.0,338
self _resize_volume_file volume_path volume [ <STR> ] ,0.0,0.0,339
volume [ <STR> ] ,1.0,0.0,340
volume_path = self local_path volume ,1.0,0.0,341
self _def_flags = <STR> ,1.0,0.0,342
mock drv _get_export_path volume [ <STR> ] ,0.0,0.0,343
mount_path = self TEST_MNT_POINT ,1.0,0.0,344
self _execute <STR> snapshot_ts_path ,1.0,0.0,345
def_delete_snapfiles self fchild mount_point ,1.0,0.0,346
drv _delete_snapfiles = mock drv _run_ssh return_value \ ,0.0,0.0,347
self _stats = data ,1.0,0.0,348
cfg StrOpt <STR> ,1.0,0.0,349
TEST_LOCAL_PATH = <STR> ,1.0,0.0,350
return_value drv _create_ibmnas_copy return_value \ ,0.0,0.0,351
Copyright <NUM> IBM Corp ,1.0,0.0,352
snapshot_ts_path = <STR> % snapshot_path ,0.0,0.0,353
mock drv _get_export_path volume_src [ <STR> ] ,0.0,0.0,354
self _execute = utils execute ,0.0,0.0,355
<STR> ,1.0,0.0,356
volume [ <STR> ] ,1.0,0.0,357
self TEST_SNAP_PATH ,0.0,0.0,358
test_extend_volume self ,1.0,0.0,359
snap_file_name = snap_file_name + <STR> ,0.0,0.0,360
setUp self ,0.0,0.0,361
fpbase endswith <STR> ,0.0,0.0,362
extend_volume self volume new_size ,1.0,0.0,363
self assertEqual mock drv _get_export_path volume [ <STR> ] ,1.0,0.0,364
<STR> ] ,1.0,0.0,365
self configuration san_ssh_port = self configuration nas_ssh_port ,0.0,0.0,366
test_check_for_setup_error self ,1.0,0.0,367
run_as_root = ,0.0,0.0,368
IBMNASDriverTestCase self tearDown ,0.0,0.0,369
self TEST_MNT_POINT ,0.0,0.0,370
<NUM> IBM Scale Out NAS SONAS ,0.0,0.0,371
self configuration san_login = self configuration nas_login ,0.0,0.0,372
VERSION = <STR> ,1.0,0.0,373
mount_path None ,1.0,0.0,374
self _get_provider_location volume_id split <STR> [ <NUM> ] ,0.0,0.0,375
self assertEqual None mock drv _get_provider_location volume [ <STR> ] ,1.0,0.0,376
volume [ <STR> ] = self TEST_NFS_EXPORT ,1.0,0.0,377
return_value drv _create_ibmnas_snap return_value \ ,0.0,0.0,378
drv _get_provider_location return_value \ ,0.0,0.0,379
volume_src = FakeEnv ,1.0,0.0,380
src = self TEST_VOLUME_PATH ,1.0,0.0,381
cfg IntOpt <STR> ,1.0,0.0,382
] ,0.0,0.0,383
dest = self TEST_SNAP_PATH ,0.0,0.0,384
drv _execute return_value \ ,1.0,0.0,385
drv create_snapshot = mock drv _get_export_path return_value \ ,0.0,0.0,386
self configuration nas_private_key ,1.0,0.0,387
data [ <STR> ] = ,1.0,0.0,388
nas_ip = ,1.0,0.0,389
drv _delete_snapfiles ,1.0,0.0,390
TEST_MNT_POINT_BASE = <STR> ,1.0,0.0,391
TEST_SNAP_PATH = <STR> ,1.0,0.0,392
drv _create_ibmnas_snap = mock drv _run_ssh return_value \ ,0.0,0.0,393
self assertEqual mock drv _run_ssh ,1.0,0.0,394
self _driver = ibmnas IBMNAS_NFSDriver configuration = ,0.0,0.0,395
create_cloned_volume self volume src_vref ,1.0,0.0,396
test_resize_volume_file self ,1.0,0.0,397
IBM NAS Volume Driver ,0.0,0.0,398
