total_tokens,line_level_label,line_score,row
<STR> We have to do this order to get CSV output the CLI command ,0.0,1.0,1
We first have to issue a command to tell the CLI that we want the ,0.0,0.8891587721528991,2
In order to export a volume on a <NUM>PAR box we have to create a VLUN ,0.0,0.865964711189455,3
The only way to do this currently to delete the volume ,0.0,0.8272349231534611,4
We have to do this order to get CSV output ,1.0,0.8114170577755394,5
NOTE walter - boring don ' t call this unless you know the volume ,0.0,0.7282135876952537,6
a command to tell the CLI that we want the output ,1.0,0.7051899411873583,7
In order to export a volume on a <NUM>PAR box we have to ,0.0,0.671691278582397,8
to get the error message ,0.0,0.5663993822711212,9
output to be formatted CSV then we issue the real command ,0.0,0.46161820213758475,10
to be formatted CSV then we issue the real ,1.0,0.46161820213758475,11
We have to use a safe hostname length ,0.0,0.4240575890192845,12
the CLI command We first have to issue ,0.0,0.3725517731898707,13
LOG debug <STR> % cmd ,1.0,0.25420086059456265,14
def_ssh_execute self ssh cmd ,1.0,0.20054665367880914,15
def_ssh_execute self ssh cmd check_exit_code = ,0.0,0.20054665367880914,16
create a VLUN ,0.0,0.1942734326070579,17
Search <STR> found the word preceding ,0.0,0.1885829422243301,18
the word preceding <STR> ,0.0,0.1885829422243301,19
exception InvalidInput reason = err ,1.0,0.15597681093485946,20
exception InvalidInput reason = err ,1.0,0.15597681093485946,21
LOG debug <STR> % vvset_name ,1.0,0.1397054691012836,22
type_id = volume get <STR> None ,1.0,0.1391515060978405,23
type_id = volume get <STR> None ,1.0,0.1391515060978405,24
self stubs Set hpdriver hpcommon HP<NUM>PARCommon ,0.0,0.12474389873756134,25
self stubs Set hpdriver hpcommon HP<NUM>PARCommon <STR> ,1.0,0.12474389873756134,26
cmd = <STR> % src_name ,1.0,0.116583102510534,27
self _cli_run cmd None ,1.0,0.11449539149329441,28
out = self _cli_run cmd None ,1.0,0.11449539149329441,29
cmd + = dest_name ,0.0,0.11449539149329441,30
cmd + = cpg + <STR> ,1.0,0.11449539149329441,31
cmd + = <STR> % snap_cpg ,0.0,0.11449539149329441,32
cmd = <STR> % volume_name ,1.0,0.11449539149329441,33
cmd + = <STR> ,1.0,0.11449539149329441,34
exception CinderException ex ,1.0,0.10416465599164966,35
exception CinderException ex get_description ,1.0,0.10416465599164966,36
<NUM>PAR host names ,0.0,0.058153968030885975,37
ex get_code = = <NUM> ,1.0,0.051837450244092136,38
ex ,0.0,0.051837450244092136,39
hpexceptions HTTPConflict ex ,1.0,0.051837450244092136,40
<STR> Get converted <NUM>PAR volume name ,1.0,0.050039961189675124,41
out [ <NUM> ] startswith <STR> ,0.0,0.022374254204601696,42
vvset_name startswith <STR> ,0.0,0.022374254204601696,43
type_id None ,1.0,0.010817715862767766,44
volume_type = self _get_volume_type type_id ,1.0,0.010817715862767766,45
volume_type = self _get_volume_type type_id ,1.0,0.010817715862767766,46
type_id None ,1.0,0.010817715862767766,47
err =_ <STR> ,1.0,0.007055581972292784,48
err =_ <STR> ,1.0,0.007055581972292784,49
snap_cpg = self config hp<NUM>par_cpg_snap ,0.0,0.006725093928596127,50
self config hp<NUM>par_cpg ,0.0,0.006725093928596127,51
self config hp<NUM>par_cpg_snap ,0.0,0.006725093928596127,52
self config hp<NUM>par_cpg_snap ,0.0,0.006725093928596127,53
cpg self config hp<NUM>par_cpg ,0.0,0.006725093928596127,54
snap_cpg = self config hp<NUM>par_cpg_snap ,0.0,0.006725093928596127,55
cpg self config hp<NUM>par_cpg ,0.0,0.006725093928596127,56
self config hp<NUM>par_cpg ,0.0,0.006725093928596127,57
fake_copy_volume self src_name dest_name ,1.0,0.0020877110172395994,58
fake_copy_volume self src_name dest_name cpg = None ,1.0,0.0020877110172395994,59
def_copy_volume self src_name dest_name ,1.0,0.0020877110172395994,60
self _cli_run <STR> % src_name dest_name None ,1.0,0.0020877110172395994,61
def_copy_volume self src_name dest_name cpg = None snap_cpg = None ,1.0,0.0020877110172395994,62
self _remove_volume_from_volume_set volume_name vvs_name ,1.0,0.0,63
prov_value = self _get_key_value hp<NUM>par_keys <STR> ,1.0,0.0,64
qos = self _get_<NUM>par_vol_comment_value vol_comment <STR> ,0.0,0.0,65
qos = self _get_qos_by_volume_type volume_type ,0.0,0.0,66
self fake_get_volume_type ,1.0,0.0,67
self fake_get_qos_by_volume_type ,1.0,0.0,68
tpvv = ,0.0,0.0,69
vvs_name = self _get_<NUM>par_vol_comment_value vol_comment <STR> ,0.0,0.0,70
self validate_cpg cpg ,0.0,0.0,71
command ,0.0,0.0,72
ttpv = ,0.0,0.0,73
snap_cpg = cpg ,1.0,0.0,74
self client deleteVolume volume_name ,0.0,0.0,75
<STR> self valid_prov_values ,1.0,0.0,76
<STR> ,1.0,0.0,77
cpg = self _get_key_value hp<NUM>par_keys <STR> ,0.0,0.0,78
ttpv = ,0.0,0.0,79
self _remove_volume_set self _get_<NUM>par_vvs_name volume [ <STR> ] ,1.0,0.0,80
<STR> Creates a volume a snapshot ,0.0,0.0,81
vvs_name = self _get_key_value hp<NUM>par_keys <STR> ,1.0,0.0,82
vol [ <STR> ] ,1.0,0.0,83
<STR> ,0.0,0.0,84
vvs_name None ,1.0,0.0,85
snap_cpg = cpg ,0.0,0.0,86
Creates a volume a snapshot ,0.0,0.0,87
self client deleteVolume volume_name ,1.0,0.0,88
<STR> ,1.0,0.0,89
new_vol = self create_volume volume ,1.0,0.0,90
new_vol ,0.0,0.0,91
<STR> ,1.0,0.0,92
vvset_name None \ ,0.0,0.0,93
<STR> qos ,0.0,0.0,94
vvset_name = None ,0.0,0.0,95
vvs_name None ,1.0,0.0,96
<STR> ,1.0,0.0,97
vvs_name = None ,1.0,0.0,98
default_prov = self valid_prov_values [ <NUM> ] ,0.0,0.0,99
<STR> volume_type ,1.0,0.0,100
None ,1.0,0.0,101
Search <STR> found ,0.0,0.0,102
snap_cpg = self _get_key_value hp<NUM>par_keys <STR> cpg ,1.0,0.0,103
prov_value self valid_prov_values ,1.0,0.0,104
vol_comment = self _get_<NUM>par_vol_comment volume_name ,0.0,0.0,105
prov_value = = <STR> ,0.0,0.0,106
<STR> self valid_prov_values ,1.0,0.0,107
qos None ,1.0,0.0,108
default_prov ,0.0,0.0,109
<STR> % \ ,1.0,0.0,110
cpg = self _get_key_value hp<NUM>par_keys <STR> ,1.0,0.0,111
self get_persona_type volume hp<NUM>par_keys ,1.0,0.0,112
qos = ,0.0,0.0,113
<STR> ttpv ,0.0,0.0,114
self state_tries = <NUM> ,0.0,0.0,115
hp<NUM>par_keys = self _get_keys_by_volume_type volume_type ,1.0,0.0,116
self _copy_volume orig_name vol_name ,1.0,0.0,117
qos = self _get_qos_by_volume_type volume_type ,1.0,0.0,118
check_exit_code = ,0.0,0.0,119
<STR> self volume_type ,1.0,0.0,120
<STR> self VVS_NAME ,1.0,0.0,121
volume_type = None ,1.0,0.0,122
hp<NUM>par_keys = ,0.0,0.0,123
volume_type = None ,0.0,0.0,124
volume_type = type_info [ <STR> ] ,1.0,0.0,125
self fake_get_volume_settings_from_type_noqos ,1.0,0.0,126
vvs_name = self _get_key_value hp<NUM>par_keys <STR> ,0.0,0.0,127
VVS_NAME = <STR> ,1.0,0.0,128
self _get_<NUM>par_vvs_name volume [ <STR> ] ,1.0,0.0,129
snap_cpg = None tpvv = ,0.0,0.0,130
self fake_get_volume_settings_from_type ,1.0,0.0,131
self validate_cpg cpg ,0.0,0.0,132
tpvv = ,0.0,0.0,133
default_prov = self valid_prov_values [ <NUM> ] ,0.0,0.0,134
tpvv ,0.0,0.0,135
<STR> Create a VLUN ,0.0,0.0,136
vvs_name = type_info [ <STR> ] ,1.0,0.0,137
fake_get_volume_settings_from_type self volume ,1.0,0.0,138
snap_cpg = None ,1.0,0.0,139
<STR> prov_value ,0.0,0.0,140
vvs_name = None ,0.0,0.0,141
None ,1.0,0.0,142
<STR> vol ,0.0,0.0,143
cpg ,1.0,0.0,144
<STR> None ,0.0,0.0,145
tpvv = type_info [ <STR> ] ,1.0,0.0,146
<STR> self QOS ,0.0,0.0,147
<STR> HP<NUM>PAR_CPG_SNAP ,1.0,0.0,148
tpvv = type_info [ <STR> ] ,1.0,0.0,149
<STR> tpvv ,0.0,0.0,150
out out > <NUM> ,0.0,0.0,151
def_get_vvset_from_<NUM>par self volume_name ,1.0,0.0,152
vvs_name None ,0.0,0.0,153
cpg = None ,0.0,0.0,154
snap_cpg ,1.0,0.0,155
self _copy_volume orig_name vol_name cpg = type_info [ <STR> ] ,0.0,0.0,156
hp<NUM>par_keys = ,1.0,0.0,157
<STR> Get Virtual Volume Set <NUM>PAR ,0.0,0.0,158
vvset_name None ,1.0,0.0,159
get_volume_settings_from_type self volume ,1.0,0.0,160
qos = ,0.0,0.0,161
self get_persona_type volume hp<NUM>par_keys ,0.0,0.0,162
type_info = self get_volume_settings_from_type volume ,1.0,0.0,163
words = out [ <NUM> ] split <STR> ,0.0,0.0,164
prov_value self valid_prov_values ,1.0,0.0,165
vvset_name ,0.0,0.0,166
<STR> ,1.0,0.0,167
tpvv = ,0.0,0.0,168
self _remove_volume_from_volume_set volume_name ,0.0,0.0,169
cpg = type_info [ <STR> ] ,1.0,0.0,170
vvset_name ,0.0,0.0,171
self fake_get_volume_stats ,1.0,0.0,172
hp<NUM>par_keys = self _get_keys_by_volume_type volume_type ,0.0,0.0,173
snap_cpg = type_info [ <STR> ] ,1.0,0.0,174
snap_cpg = type_info [ <STR> ] ,1.0,0.0,175
vol [ <STR> ] ,0.0,0.0,176
prov_value = self _get_key_value hp<NUM>par_keys <STR> ,0.0,0.0,177
prov_value = = <STR> ,1.0,0.0,178
self _remove_volume_set ,0.0,0.0,179
qos = type_info [ <STR> ] ,1.0,0.0,180
<STR> HP<NUM>PAR_CPG ,1.0,0.0,181
vvset_name = words [ words - <NUM> ] ,0.0,0.0,182
vvset_name = self _get_vvset_from_<NUM>par volume_name ,0.0,0.0,183
already a vvset ! ,0.0,0.0,184
<STR> snap_cpg ,0.0,0.0,185
fake_get_volume_settings_from_type_noqos self volume ,1.0,0.0,186
default_prov ,0.0,0.0,187
<STR> % \ ,0.0,0.0,188
snap_cpg = self _get_key_value hp<NUM>par_keys <STR> cpg ,0.0,0.0,189
<STR> prov_value ,0.0,0.0,190
